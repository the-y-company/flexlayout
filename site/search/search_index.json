{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"flexlayout","text":"<p>Responsive layout for \u2018Shiny\u2019 that collapse into offcanvas on small screens.</p> <p>Info</p> <p>This package was funded by The Association of State and Territorial Health Officials </p> <p>The flexlayout package is used the Astho\u2019s Profile dashboard that was presented at the Shinconf 2024.</p>"},{"location":"get-started/","title":"Get Started","text":"<p>The flexlayout package comprises of a single function and as such is relative easy to use.</p> <p>The three core arguments of the <code>flexlayout()</code> function are <code>left</code>, <code>center</code>, and <code>right</code>. They respectively </p> <pre><code>library(shiny)\nlibrary(flexlayout)\n\nui &lt;- fluidPage(\n  theme = bslib::bs_theme(5L),\n  flexlayout(\n    left = div(\n      h2(\"LEFT\")\n    ),\n    center = div(\n      h2(\"CENTER\")\n    ),\n    right = div(\n      h2(\"RIGHT\")\n    )\n  )\n)\n\nserver &lt;- function(input, output, session) {}\n\nshinyApp(ui, server)\n</code></pre> <p>To see the effect of the layout narrow your browser until it reaches the width of a table or less.</p>"},{"location":"get-started/#example","title":"Example","text":"<p>In the Astho\u2019s Profile dashboard that was presented at the Shinconf 2024, flexlayout is used to display inputs on the <code>left</code>, a <code>Visualisation</code> in the center, and context about the Visualisation on the <code>right</code>.</p> <pre><code>library(shiny)\nlibrary(flexlayout)\n\nui &lt;- fluidPage(\n  theme = bslib::bs_theme(5L),\n  flexlayout(\n    left = div(\n      h2(\"Inputs\"),\n      selectInput(\n        \"specie\",\n        \"Specie\",\n        choices = c(\"setosa\", \"versicolor\", \"virginica\")\n      )\n    ),\n    center = div(\n      h2(\"Visualisation\"),\n      plotOutput(\"plot\")\n    ),\n    right = div(\n      h2(\"Context\"),\n      uiOutput(\"context\")\n    )\n  )\n)\n\nserver &lt;- function(input, output, session) {\n  dataset &lt;- reactive({\n    iris[iris$Species == input$specie, ]\n  }) \n\n  output$plot &lt;- renderPlot({\n    plot(dataset()[, c(\"Petal.Length\", \"Petal.Width\")])\n  })\n\n  output$context &lt;- renderUI({\n    p(\n      \"The plot display the petal length and width of the\",\n      strong(input$specie),\n      \"of iris.\"\n    )\n  })\n}\n\nshinyApp(ui, server)\n</code></pre> <p>Note that you can customise the <code>left_icon</code> and <code>right_icon</code> displayed when the dashboard is viewed on a smaller screen.</p>"},{"location":"installation/","title":"Install","text":"<p>flexfilter is not yet on CRAN, you can get it from Github.</p> <p>Using remotes</p> <pre><code># install.packages(\"remotes\")\nremotes::install_github(\"the-y-company/flexfilter\")\n</code></pre> <p>Using pak</p> <pre><code># install.packages(\"pak\")\npak::pkg_install(\"the-y-company/flexfilter\")\n</code></pre>"}]}